/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.tdev.dungeonUtils.gui;

import be.tdev.dungeonUtils.diceroller.DiceRoller;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author Quentin
 */
public class MainFrame extends javax.swing.JFrame {
    private int numberOfDiceRolled;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.numberOfDiceRolled = 1;
        this.listDiceHistorical.setModel(new DefaultListModel());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        treasurePanel = new javax.swing.JPanel();
        criticalPanel = new javax.swing.JPanel();
        cityPanel = new javax.swing.JPanel();
        diceRollerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDiceRoller = new javax.swing.JTextPane();
        diceExpression = new javax.swing.JTextField();
        ButtonRoll = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDiceHistorical = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        characterPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout treasurePanelLayout = new javax.swing.GroupLayout(treasurePanel);
        treasurePanel.setLayout(treasurePanelLayout);
        treasurePanelLayout.setHorizontalGroup(
            treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        treasurePanelLayout.setVerticalGroup(
            treasurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Treasure", treasurePanel);

        javax.swing.GroupLayout criticalPanelLayout = new javax.swing.GroupLayout(criticalPanel);
        criticalPanel.setLayout(criticalPanelLayout);
        criticalPanelLayout.setHorizontalGroup(
            criticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        criticalPanelLayout.setVerticalGroup(
            criticalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Criticals", criticalPanel);

        javax.swing.GroupLayout cityPanelLayout = new javax.swing.GroupLayout(cityPanel);
        cityPanel.setLayout(cityPanelLayout);
        cityPanelLayout.setHorizontalGroup(
            cityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        cityPanelLayout.setVerticalGroup(
            cityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("City management", cityPanel);

        jScrollPane1.setViewportView(textDiceRoller);

        ButtonRoll.setText("Roll");
        ButtonRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRollActionPerformed(evt);
            }
        });

        listDiceHistorical.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDiceHistorical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listDiceHistoricalMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listDiceHistorical);

        jLabel1.setText("Dice Result:");

        jLabel2.setText("Historic:");

        javax.swing.GroupLayout diceRollerPanelLayout = new javax.swing.GroupLayout(diceRollerPanel);
        diceRollerPanel.setLayout(diceRollerPanelLayout);
        diceRollerPanelLayout.setHorizontalGroup(
            diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diceRollerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(diceRollerPanelLayout.createSequentialGroup()
                        .addComponent(ButtonRoll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(diceExpression))
                    .addGroup(diceRollerPanelLayout.createSequentialGroup()
                        .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))))
                .addGap(125, 125, 125))
        );
        diceRollerPanelLayout.setVerticalGroup(
            diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diceRollerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(diceRollerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diceExpression, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonRoll))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dice roller", diceRollerPanel);

        javax.swing.GroupLayout characterPanelLayout = new javax.swing.GroupLayout(characterPanel);
        characterPanel.setLayout(characterPanelLayout);
        characterPanelLayout.setHorizontalGroup(
            characterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        characterPanelLayout.setVerticalGroup(
            characterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Character", characterPanel);

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("?");

        jMenuItem2.setText("About us");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * event triggered when the button roll is pressed
     * make a dice roll based on the expression
     * @param evt 
     */
    private void ButtonRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRollActionPerformed
        //get the dice expression
        
        String expression = diceExpression.getText();
        
        int result = RollDice(expression);
        
        //manage the list
        DefaultListModel<String> temp =  (DefaultListModel) listDiceHistorical.getModel();
        if( !temp.contains(expression)) {
            temp.addElement(expression);
        }
        this.textDiceRoller.setText("");
        
    }//GEN-LAST:event_ButtonRollActionPerformed

    /**
     * event triggered whene a double click is made on the jlist
     * @param evt 
     */
    private void listDiceHistoricalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listDiceHistoricalMouseClicked
        if( evt.getClickCount() == 2) {
            RollDice((String) listDiceHistorical.getSelectedValue());
            
        }
    }//GEN-LAST:event_listDiceHistoricalMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonRoll;
    private javax.swing.JPanel characterPanel;
    private javax.swing.JPanel cityPanel;
    private javax.swing.JPanel criticalPanel;
    private javax.swing.JTextField diceExpression;
    private javax.swing.JPanel diceRollerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList listDiceHistorical;
    private javax.swing.JTextPane textDiceRoller;
    private javax.swing.JPanel treasurePanel;
    // End of variables declaration//GEN-END:variables
    
    private int RollDice(String expression) {
        //roll the dice
        DiceRoller dice = new DiceRoller(expression);
        dice.ParseExpression();
        
        //update the gui
        textDiceRoller.setText(textDiceRoller.getText() + 
                               "[rolling " + numberOfDiceRolled + "]" +
                               " " + expression + ": " + dice.getResult() + "\n");
        this.textDiceRoller.setEditable(false);
        numberOfDiceRolled++;
        
        return dice.getResult();
        
    }


}
